# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

# Load standard simulator config
[include mainsail.cfg]
[include brushbucket.cfg]
[include stealthburner_leds.cfg]
[include klicky-quad-gantry-level.cfg]
[include klicky-bed-mesh-calibrate.cfg]
[include z-calibration.cfg]
#[include adxl.cfg]

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[exclude_object]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3E002C001350324E31333220-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 3000             #Max 4000, Default 3000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64 #original 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 80   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64 #original 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
position_endstop: 305
position_max: 305

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 80  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 2.89
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 13.087145   #Bondtech 5mm Drive Gears
rotation_distance: 5.567019    #Bondtech LGX Lite: default 5.7
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #BMG Gear Ratio - commented out for LGX Lite
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G #Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 10
max_temp: 301 #270
max_power: 1.0
min_extrude_temp: 179
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.038
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
run_current: 0.6	# for LDO 36STH20-1004AHG
hold_current: 0.4	# for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0
#driver_TBL: 0
#driver_HEND: 6
#driver_HSTRT: 7
#driver_TOFF: 4

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.75
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


#####################################################################
#   Chamber Thermister
#####################################################################

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: C



#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]

#--------------------------------------------------------------------

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 19.75 #25.0
z_offset: 6.42 #0
speed: 3.0 #10
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 2

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.2
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
cycle_time: 0.100 # Default 0.010
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 0.75

##  Controller fan - FAN2
#[multi_pin my_controller_fan_pins]
#pins: PD12, PD13
#[controller_fan controller_fan]
#pin: multi_pin:my_controller_fan_pins
#kick_start_time: 0.5
#heater: heater_bed
#fan_speed: 0.5

[temperature_fan controller_fan]
pin: PD12
kick_start_time: 0.5
#heater: heater_bed
#fan_speed: 1.0
off_below: 0.2
max_power: 1.0
sensor_type: temperature_host #temperature_host
control: pid
min_temp: -40
max_temp: 85
#max_delta: 5.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
min_speed: 0
max_speed: 1
target_temp: 5
cycle_time: 0.200 # Default 0.010

[fan_generic nevermore]
pin: PD13
max_power: 0.9
kick_start_time: 0.5
cycle_time: 0.100 # Default 0.010
off_below: 0.10

###  Controller fan - FAN3
#[controller_fan controller_fan2]
#pin: PD13
#kick_start_time: 0.5
#heater: heater_bed
#fan_speed: 0.8


##  Exhaust fan - FAN4
#[fan_generic chamber_fan]
#pin: PD14
#max_power: 0.7
#shutdown_speed: 0.0


#####################################################################
#   Chamber Light Control
#####################################################################

[output_pin chamber_lights]
pin: PD15
pwm: True
value: 0
cycle_time: 0.010
hardware_pwm: False


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200 #1800

#[safe_z_home]
###  XY Location of the Z Endstop Switch
###  Update -10,-10 to the XY coordinates of your endstop pin 
###  (such as 157,305) after going through Z Endstop Pin
###  Location Definition step.
#home_xy_position:206.7,305
#speed:150
#z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
#  Gantry Corners for 300mm Build
#  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
#  Probe points
points:
   50,25
   50,225
   250,225
   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 150
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


[bed_mesh]
speed: 150
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

#	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 24

########################################
# Additional temperature sensors
########################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


#  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 56
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0
initial_GREEN: 0.59766
initial_BLUE: 0.1992
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0.6 BLUE=0.2 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0.6 BLUE=0.2 INDEX=3 

#--------------------------------------------------------------------



#####################################################################
#   Input Shaper
#####################################################################
[input_shaper]
shaper_freq_x: 61.4 #68.8 #33.1126  # frequency for the X mark of the test model
shaper_type_x: mzv
shaper_freq_y: 39.6 #42.6 #35.5292  # frequency for the Y mark of the test model
shaper_type_y: mzv

#####################################################################
#   LED Control
#####################################################################

# The following status macros are available from stealthburner_leds.cfg:
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
# With additional macros for direct control:
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

#####################################################################
#   Macros
#####################################################################
[include klicky-probe.cfg]

[gcode_macro LIGHTS_OUT]
gcode:
    STATUS_OFF
    SET_PIN PIN=chamber_lights VALUE=0.00


[gcode_macro AUTO_Z]
gcode:
    SET_GCODE_OFFSET Z=0
    M84
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    G28 Z
    CALIBRATE_Z
    STATUS_READY

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    STATUS_HOMING    
    G28
    STATUS_LEVELING    
    QUAD_GANTRY_LEVEL
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_HOMING
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F7200 #Original F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    STATUS_READY   
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro HEAD_TO_CENTER]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}

    G90
    G0 X150 Y150 Z30 F7200 #Original F3600

[gcode_macro HEAD_TO_FRONT]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
   
    G90
    G0 X150 Y0 Z100 F7200 #Original F3600

[gcode_macro HEAD_TO_BUCKET]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
 
    G90
    G0 X290 Y305 Z10 F7200 #Original F3600


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|int %}

    BED_MESH_CLEAR
    SET_PIN PIN=chamber_lights VALUE=1.00        ; turn on chamber lights
    STATUS_HEATING
    #SET_TEMPERATURE_FAN_TARGET temperature_fan=controller_fan target=24 min_speed=0.4 max_speed=0.8

    {% if bedtemp > 85 %}
      SET_FAN_SPEED FAN=nevermore SPEED=0.9      ; turn on nevermore 90%
    {% else %}
      SET_FAN_SPEED FAN=nevermore SPEED=0.5      ; turn on nevermore 50%
      #SET_FAN_SPEED FAN=chamber_fan SPEED=0.5    ; turn on chamber fan 50%
    {% endif %}

    M104 S180.0                    ; Start heating up the nozzle most of the way
    #M190 S{bedtemp}                ; set & wait for bed temp

    {% if printer["temperature_sensor chamber"].temperature < chambertemp %}                 ; - if chamber is not at temp yet:
       # HEATSOAK T={bed} MOVE=1                                                          ;   heatsoak macro + park in center
        M190 S{bedtemp}                                                                      ;   wait for bed final temp
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}           ;   wait for chamber final temp
    {% else %}                                                                           ; - if chamber is already at temp:
        {% if printer.heater_bed.temperature < (bedtemp-2) %}                                ; -- but bed is not fully heated (within 2C):
           # HEATSOAK T={bed} MOVE=1                                                      ;       heatsoak and park
            M190 S{bedtemp}                                                                  ;       wait for bed final temp
        {% endif %}
    {% endif %}

    #G32                            ; home all axes
    AUTO_Z
    G90                            ; absolute positioning
    #G1 Z9 F3000                    ; move nozzle away from bed
    STATUS_HEATING    
    HEAD_TO_BUCKET
    M109 S{hotendtemp}             ; set & wait for hotend temp
    G92 E0                         ; zero the extruder
    G1 E17.4 F800                ; Load filament to replace what was retracted at PRINT_END
    STATUS_CLEANING 
    #PURGE_NOZZLE
    #G4 P9000                       ;(creates a pause for # seconds)
    CLEAN_NOZZLE
    #HEAD_TO_CENTER
    BED_MESH_PROFILE LOAD=voron2
    STATUS_PRINTING
    G0 X300 Y80 Z10 F7200 

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %} #{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-18.0 F800                 ; retract filament  # Was 5.0mm
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} Z{z_safe + 20} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M84                                      ; turn off steppers
    BED_MESH_CLEAR
    #SET_TEMPERATURE_FAN_TARGET temperature_fan=controller_fan target=36 min_speed=0.11 max_speed=0.7
    {% if printer.heater_bed.temperature > 90 %} 
        SET_FAN_SPEED FAN=nevermore SPEED=1      ; turn on nevermore (if it isn't already)
        RESPOND PREFIX=INFO MSG="Looks like it was ABS. Running Nevermore fan for 10 minutes"
        G4 P600000                               ; wait for 10 minutes before stopping nevermore fan
    {% endif %}
    SET_FAN_SPEED FAN=nevermore SPEED=0      ; turn off nevermore
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0    ; turn off chamber fan
    STATUS_OFF
    SET_PIN PIN=chamber_lights VALUE=0       ; tunr of lights
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro PREHEAT_ABS]
gcode:
    STATUS_HEATING
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0
    SET_FAN_SPEED FAN=nevermore SPEED=0.8
    SET_PIN PIN=chamber_lights VALUE=1.00
    M106 S77    
    M104 S180.0              ; Start heating up the nozzle most of the way
    M140 S110                ; set bed temp (don't wait)
    #STATUS_READY

[gcode_macro PREHEAT_PLA]
gcode:
    STATUS_HEATING  
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0.90
    SET_PIN PIN=chamber_lights VALUE=1.00
    M106 S77    
    M104 S180.0             ; Start heating up the nozzle most of the way
    M140 S65                ; Set bed temp (don't wait)
    #STATUS_READY


[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E5 F1000  ; Extrude filament 5mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.


[gcode_macro M600]
gcode:
    {% set X = params.X|default(290)|float %}
    {% set Y = params.Y|default(305)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    STATUS_BUSY
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F7200
    G91
    G1 E-50 F3600
    RESTORE_GCODE_STATE NAME=M600_state


[delayed_gcode EQUERY]
#
# EQUERY
#
# Continuously polls the endstop state until stopped
#
gcode:
    #query_endstops
    query_probe
    #QUERY_FILAMENT_SENSOR sensor=filament_presence
    UPDATE_DELAYED_GCODE ID=EQUERY DURATION=0.5

[gcode_macro start_equery]
description: Print the endstop state to the console until you call STOP_QUERY
gcode:
    update_delayed_gcode id=EQUERY DURATION=1

[gcode_macro stop_equery]
description: Stop reporting the endstop state to the console
gcode:
    update_delayed_gcode id=EQUERY DURATION=0

[gcode_macro T0]
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*#
#*# [stepper_z]
#*# position_endstop = 1.637
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.133
#*# pid_ki = 5.292
#*# pid_kd = 55.040
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.337
#*# pid_ki = 1.622
#*# pid_kd = 276.252
#*#
#*# [bed_mesh voron2]
#*# version = 1
#*# points =
#*# 	0.051250, 0.050000, 0.046875, 0.041250, 0.036250, 0.043750, 0.055625
#*# 	0.050625, 0.060000, 0.048750, 0.042500, 0.041875, 0.035000, 0.047500
#*# 	0.041875, 0.046250, 0.038750, 0.024375, 0.028125, 0.034375, 0.030625
#*# 	0.026875, 0.020000, 0.004375, 0.000000, 0.004375, 0.008750, 0.010625
#*# 	0.008750, 0.003125, -0.006250, -0.009375, -0.011250, -0.009375, 0.003125
#*# 	0.033750, 0.033125, 0.018125, 0.004375, 0.002500, 0.010625, 0.027500
#*# 	0.061875, 0.061875, 0.060000, 0.054375, 0.051250, 0.054375, 0.065000
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 259.96
#*# min_y = 40.0
#*# max_y = 259.96000000000004
