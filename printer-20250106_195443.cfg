# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

# Load standard simulator config
[include mainsail.cfg]
[include brushbucket.cfg]
[include stealthburner_leds.cfg]
[include Adaptive_Mesh.cfg]     #https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
[include Adaptive_Purge.cfg]    #https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
[include test_probe_accuracy.cfg]
[include sensorless.cfg]
[include klicky-probe.cfg]
[include saved-bed-meshes.cfg]
#[include adxl.cfg]

### Toolhead changes
[include printer-A4T-smol.cfg]
#[include printer-A4T-dragon-ACE.cfg]
#[include printer-A4T-dragonHF.cfg]
#[include printer-NFC-CPAP.cfg]
#[include printer-dragon-HF-CPAP.cfg]
#[include printer-dragon-ACE-CPAP.cfg]
#[include printer-dragon-HF.cfg]
#[include printer-crazy-dragon.cfg]



## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[exclude_object]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_06001B001850535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 10000             #Max 4000, Default 3000
max_accel_to_decel: 99999
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 15

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 128 #original 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: PG6
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
position_min: 0
##--------------------------------------------------------------------

position_endstop: 301 #283
position_max: 301 #283

##--------------------------------------------------------------------
homing_speed: 60   #Max 100
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.0
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 103  # 255 is most sensitive value, 0 is least sensitive

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 128 #original 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
position_min: 0
##--------------------------------------------------------------------

position_endstop: 310
position_max: 310

##--------------------------------------------------------------------
homing_speed: 60  #Max 100
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 90 # 255 is most sensitive value, 0 is least sensitive
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32
#endstop_pin: PG10

#For Voron Tap
endstop_pin: probe:z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 2.89
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 12
second_homing_speed: 12
homing_retract_dist: 1

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 99999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64 #original 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 99999


#####################################################################
#   Thermistor definition
#####################################################################
[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6


#####################################################################
#   Probe
#####################################################################
# Klicky
[probe]

###--------------------------------------------------------------------
pin: ^sht:PROBE_1  #PCB_Klicky sht:PROBE_1 #unTAP ^sht:PROBE_1  #TAP ^sht:PROBE_2 #5pin JST: ^sht:LIMIT_0
###-------------------------------------------------------------------

x_offset: 0 #-2
y_offset: 0 #22  #19.75  #0  #25.0
#z_offset: -2
speed: 12 #10
lift_speed: 24
samples: 3
samples_result: median
sample_retract_dist: .8
samples_tolerance: 0.05
samples_tolerance_retries: 3

drop_first_result: True
### Needed for Voron TAP
#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}
#
#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1
min_temp: 0
max_temp: 124
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


#####################################################################
#   Chamber Thermister
#####################################################################

[temperature_sensor chamber]
sensor_type: Trianglelab NTC100K B3950 #Generic 3950
sensor_pin: PF5
min_temp: -15
max_temp: 100
gcode_id: C


#####################################################################
#   Fan Control
#####################################################################

[temperature_fan controller_fan]
pin: PD12
kick_start_time: 0.5
#heater: heater_bed
#fan_speed: 1.0
off_below: 0.2
max_power: 1.0
sensor_type: temperature_host #temperature_host
control: pid
min_temp: -40
max_temp: 85
#max_delta: 5.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
min_speed: 0
max_speed: 1
target_temp: 5
cycle_time: 0.200 # Default 0.010

[fan_generic nevermore]
pin: PD13
max_power: 1.0
kick_start_time: 0.2
#cycle_time: 0.100 # Default 0.010
off_below: 0.40

##  Exhaust fan - FAN4
#[fan_generic chamber_fan]
#pin: PD14
#max_power: 0.7
#shutdown_speed: 0.0

#####################################################################
#   Chamber Light Control
#####################################################################

[output_pin chamber_lights]
pin: PD15
pwm: True
value: 0
cycle_time: 0.010
hardware_pwm: False


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200 #1800

#[safe_z_home]
###  XY Location of the Z Endstop Switch
###  Update -10,-10 to the XY coordinates of your endstop pin 
###  (such as 157,305) after going through Z Endstop Pin
###  Location Definition step.
#home_xy_position:206.7,305
#home_xy_position:150,150
#speed:150
#z_hop:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------

#  Gantry Corners for 300mm Build
#  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

#  Probe points with Voron Tap
points:
    40,30
    40,240   #40,240
    260,240   #260,240
    260,30

    #25,25
    #25,275
    #275,275
    #275,25

#--------------------------------------------------------------------
speed: 250
horizontal_move_z: 25 #8
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 250
horizontal_move_z: 19.210 #3.715 #18.621
##--------------------------------------------------------------------
#	Uncomment for 300mm build
mesh_min: 40, 40 #40, 40
mesh_max: 260, 260 #260, 260

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
algorithm: bicubic
zero_reference_position: 150, 150
#relative_reference_index: 24


########################################
# Arc controls
########################################
[gcode_arcs]
resolution: 0.4
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.



########################################
# Additional temperature sensors
########################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


#  mini12864 LCD Display
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 56
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 0
initial_GREEN: 0.59766
initial_BLUE: 0.1992
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0.6 BLUE=0.2 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0.6 BLUE=0.2 INDEX=3 

#--------------------------------------------------------------------

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".



#####################################################################
#   LED Control
#####################################################################

# The following status macros are available from stealthburner_leds.cfg:
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
# With additional macros for direct control:
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

#####################################################################
#   Macros
#####################################################################
#[include klicky-probe.cfg]

[gcode_macro LIGHTS_OUT]
gcode:
    STATUS_OFF
    SET_PIN PIN=chamber_lights VALUE=0.00


#[gcode_macro AUTO_Z]
#gcode:
#    SET_GCODE_OFFSET Z=0
#    M84
#    G28
#    STATUS_LEVELING
#    QUAD_GANTRY_LEVEL
#    CLEAN_NOZZLE
#    G28 Z
#    CALIBRATE_Z
#    STATUS_READY

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    STATUS_HOMING    
    G28
    STATUS_LEVELING    
    QUAD_GANTRY_LEVEL
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    STATUS_HOMING
    G28 Z
    STATUS_READY   
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro HEAD_TO_CENTER]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}

    G90
    G0 X150 Y150 Z25 F7200 #Original F3600

[gcode_macro HEAD_TO_FRONT]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
   
    G90
    G0 X200 Y5 Z100 F7200 #Original F3600

[gcode_macro HEAD_TO_BUCKET]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
 
    G90
    G0 X290 Y303 Z10 F7200 #Original F3600



#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set warmuphotendtemp = params.HOTEND|int * 0.75 %}
    {% set chambertemp = params.CHAMBER|int %}
    {% set pavalue = printer['extruder'].pressure_advance %}
    {% set stvalue = printer['extruder'].smooth_time %}
    ; gcode parameters for area bed mesh

    #SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
    SET_PIN PIN=chamber_lights VALUE=1.00        ; turn on chamber lights
    STATUS_HEATING
    #SET_TEMPERATURE_FAN_TARGET temperature_fan=controller_fan target=24 min_speed=0.4 max_speed=0.8

    {% if bedtemp > 95 %}
      SET_FAN_SPEED FAN=nevermore SPEED=1
    {% else %}
      SET_FAN_SPEED FAN=nevermore SPEED=1
      #SET_FAN_SPEED FAN=chamber_fan SPEED=0.5    ; turn on chamber fan 50%
    {% endif %}
    
    M106 S230 #S77                                      ; turn on part cooling fan to protect klicky-00
    {% if warmuphotendtemp < 190 %}
        M104 S{warmuphotendtemp}    #150.0                    ; Start heating up the nozzle most of the way
    {% else %}
        M104 S190
    {% endif %}    

    {% if printer["temperature_sensor chamber"].temperature < chambertemp %}                 ; - if chamber is not at temp yet:
       # HEATSOAK T={bed} MOVE=1                                                          ;   heatsoak macro + park in center
        M190 S{bedtemp+10}                                                                      ;   wait for bed final temp
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}           ;   wait for chamber final temp
        #M190 S{bedtemp}                ; set & wait for bed temp
    {% endif %}
    M190 S{bedtemp}                ; set & wait for bed temp

    #AUTO_Z
    ### G32 ###
    BED_MESH_CLEAR
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    STATUS_HOMING    
    G28 X
    G28 Y
    ATTACH_PROBE_LOCK
    G28 Z
    STATUS_LEVELING    
    QUAD_GANTRY_LEVEL
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    STATUS_HOMING
    G28 Z
    STATUS_READY   
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_MESHING
    BED_MESH_CALIBRATE
    DOCK_PROBE_UNLOCK
    G90                            ; absolute positioning
    STATUS_HEATING    
    #HEAD to front touching plate
    G0 X1 Y1 Z10 F7200 #Original F3600
    G0 Z0.05
    M106 S0                        ; turn off part cooling fan
    M109 S{hotendtemp}             ; set & wait for hotend temp
    G92 E0                         ; zero the extruder
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    STATUS_PRINTING
    G0 Z2
    M106 S0                        ; turn off fan
    SET_VELOCITY_LIMIT ACCEL=1000
    ADAPTIVE_PURGE #    PURGE_NOZZLE
    
    

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %} #{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-7.0 F800                 ; retract filament  # Was 5.0mm, 1.0 for Rapido
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2 + 50} Y{th.axis_minimum.y + 3} Z{z_safe + 20} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M84                                      ; turn off steppers
    BED_MESH_CLEAR
    BED_MESH_PROFILE REMOVE=default
    #SET_GCODE_OFFSET Z=0
    #SET_TEMPERATURE_FAN_TARGET temperature_fan=controller_fan target=36 min_speed=0.11 max_speed=0.7
    {% if printer.heater_bed.temperature > 195 %} 
        SET_FAN_SPEED FAN=nevermore SPEED=1      ; turn on nevermore (if it isn't already)
        RESPOND PREFIX=INFO MSG="Looks like it was ABS. Running Nevermore fan for 5 minutes"
        G4 P300000           #P300000             ; wait for 10 minutes before stopping nevermore fan
    {% endif %}
    SET_FAN_SPEED FAN=nevermore SPEED=0      ; turn off nevermore
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0    ; turn off chamber fan
    SET_FAN_SPEED FAN=CPAP SPEED=0
    STATUS_OFF
    SET_PIN PIN=chamber_lights VALUE=0       ; tunr of lights
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro PREHEAT_ABS]
gcode:
    STATUS_HEATING
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0
    SET_FAN_SPEED FAN=nevermore SPEED=1
    SET_FAN_SPEED FAN=CPAP SPEED=0.3
    SET_PIN PIN=chamber_lights VALUE=1.00
    M106 S250 #S77   
    M104 S150.0              ; Start heating up the nozzle most of the way
    M140 S122                ; set bed temp (don't wait)
    #STATUS_READY
   {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
   {% endif %}
    G90
    G0 X160 Y100 Z30 F7200 #Original F3600

[gcode_macro PREHEAT_PETG]
gcode:
    STATUS_HEATING
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0
    SET_FAN_SPEED FAN=nevermore SPEED=1
    SET_PIN PIN=chamber_lights VALUE=1.00
    M106 S250 #S77   
    M104 S150.0              ; Start heating up the nozzle most of the way
    M140 S75                ; set bed temp (don't wait)
    #STATUS_READY

[gcode_macro PREHEAT_PLA]
gcode:
    STATUS_HEATING  
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0.90
    SET_PIN PIN=chamber_lights VALUE=1.00
    M106 S77    
    M104 S150.0             ; Start heating up the nozzle most of the way
    M140 S65                ; Set bed temp (don't wait)
    #STATUS_READY


[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y1 X1 F18000
    G1 Z0.25 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X120 E18 F1000  ; Extrude filament 18mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.7 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro SHUT_DOWN]
gcode:
  M84
  TURN_OFF_HEATERS
  SET_FAN_SPEED FAN=nevermore SPEED=0
  M106 S0
  LIGHTS_OUT

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set th = printer.toolhead %}
    {% set X = params.X|default(290)|float %}
    {% set Y = params.Y|default(303)|float %}
    {% set Z = params.Z|default([th.position.z + 2, th.axis_maximum.z]|min)|float %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set PAUSE_TEMP = ACTUAL_TEMP - 10 %}

    SAVE_GCODE_STATE NAME=M600_state
    STATUS_BUSY
    PAUSE
    G91
    G1 E-7 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F7200
    M109 S{ PAUSE_TEMP }
    G91
    G1 E-180 F3600
    RESTORE_GCODE_STATE NAME=M600_state


[delayed_gcode EQUERY]
#
# EQUERY
#
# Continuously polls the endstop state until stopped
#
gcode:
    #query_endstops
    query_probe
    #QUERY_FILAMENT_SENSOR sensor=filament_presence
    UPDATE_DELAYED_GCODE ID=EQUERY DURATION=0.5

[gcode_macro start_equery]
description: Print the endstop state to the console until you call STOP_QUERY
gcode:
    update_delayed_gcode id=EQUERY DURATION=1

[gcode_macro stop_equery]
description: Stop reporting the endstop state to the console
gcode:
    update_delayed_gcode id=EQUERY DURATION=0

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro T0]
gcode:


[gcode_macro test_dock]
gcode:
  {% set dock_count = 100 %}
  SAVE_GCODE_STATE NAME=dock_test_state
  {% for dock in range(dock_count) %}
    ATTACH_PROBE
    G1 X150 Y150.00 F24000
    G1 X10 Y250.00 F24000
    DOCK_PROBE
    G1 X10 Y250.00 F24000
    G1 X150 Y200.00 F24000
    G1 X45 Y273.00 F24000
    RESPOND PREFIX="DOCK COUNT:" MSG={dock + 1}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=dock_test_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 44.190
#*# pid_ki = 1.683
#*# pid_kd = 289.998
#*#
#*# [probe]
#*# z_offset = 17.240
